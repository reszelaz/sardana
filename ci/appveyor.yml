image: Visual Studio 2017

# fetch repository as zip archive
shallow_clone: true

environment:
    global:
        VENV_BUILD_DIR: "venv_build"
        VENV_TEST_DIR: "venv_test"

    matrix:
        # Python 2.7 (64)
        - PYTHON_DIR: "C:\\Python27-x64"
          PYTHON_VERSION: "2.7"
          PYTHON_ARCH: "64"
          CONDA_PY: "27"

        # Python 2.7
        - PYTHON_DIR: "C:\\Python27"
          PYTHON_VERSION: "2.7"
          PYTHON_ARCH: "32"
          CONDA_PY: "27"

install:
    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

    # Install Tango
    #- ps: $tangoinstallerurl = "https://sourceforge.net/projects/tango-cs/files/TangoSetup-9.2.2_win64.exe/download"
    #- ps: $tangoinstaller = "$env:TMP\\TangoSetup-9.2.2_win64.exe"
    #- ps: wget $tangoinstallerurl -OutFile $tangoinstaller
    #- ps: echo "Installing Tango"
    #- ps: Start-Process "$env:TMP\\TangoSetup-9.2.2_win64.exe" /S -Wait
    
    # Install PyTango
    - ps: $pytangoinstallerurl = "https://github.com/NexeyaSGara/pytango/releases/download/9.2.6/pytango-9.2.3.win-amd64-py2.7.msi"
    - ps: $pytangoinstaller = "$env:TMP\\pytango-9.2.3.win-amd64-py2.7.msi"
    - ps: wget $pytangoinstallerurl -OutFile $pytangoinstaller
    - ps: echo "Installing PyTango"
    - ps: msiexec /quiet /i $pytangoinstaller | out-null

    # Create Conda env
    - ps: echo "Creating py2qt5 conda environment"
#    - ps: $env:PATH += ";C:\Miniconda-x64\\Scripts"
    - ps: C:\\Miniconda-x64\\Scripts\\conda.exe create -q -y -n py2qt5 python=2.7 pyqt=5 numpy pyqtgraph lxml qt=5 six future ipython cython scipy pillow
    - ps: echo "setting variables"
    - ps: $env:TANGO_HOST='localhost:10000'
    - ps: $env:PYTHONPATH='C:\\Lib\\site-packages'
    - C:\\Miniconda-x64\\Scripts\\activate py2qt5
    - python -c "import tango; print tango.__file__"
    - ps: ls C:\\Lib\\site-packages\\tango\\databaseds
    - ps: ls C:\\Lib\\site-packages\\tango\\databaseds\\db_access

# before_test:
#     - docker-switch-linux
#     - docker run --platform=linux -d --name=sardana-test -h sardana-test reszelaz/sardana-test
#     - python -c "import tango; print tango.Database().ping()"

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_BUILD_DIR%"
    - "%VENV_BUILD_DIR%\\Scripts\\activate.bat"

    # Install wheel
    - "pip install --upgrade wheel"

    # Build sardana sdist, msi and wheel
    - "python setup.py sdist bdist_wheel bdist_msi"
    - ps: "ls dist"

    # Leave build virtualenv
    - "%VENV_BUILD_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_BUILD_DIR% /s /q"


#test_script:
# TODO


artifacts:
    # Archive the generated sdist, wheel and msi packages in the ci.appveyor.com build report.
    - path: dist\*.tar.gz
      name: sardana_SDIST

    - path: dist\*.msi
      name: sardana_MSI

    - path: dist\*.whl
      name: sardana_WHEEL

#deploy
# TODO
